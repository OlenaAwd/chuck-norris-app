{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/Desktop/norris/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\norris\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createSlice}from\"@reduxjs/toolkit\";export var initialState={loading:false,error:false,joke:null};var jokesSlice=createSlice({name:\"jokes\",initialState:initialState,reducers:{setJokesLoading:function setJokesLoading(state){state.loading=true;},setJokesSuccess:function setJokesSuccess(state,_ref){var payload=_ref.payload;state.joke=payload;state.loading=false;state.hasErrors=false;},setJokesError:function setJokesError(state){state.loading=false;state.error=true;}}});// Actions generated from the slice\nvar _jokesSlice$actions=jokesSlice.actions,setJokesLoading=_jokesSlice$actions.setJokesLoading,setJokesSuccess=_jokesSlice$actions.setJokesSuccess,setJokesError=_jokesSlice$actions.setJokesError;// Selector\nexport{setJokesLoading,setJokesSuccess,setJokesError};export var jokesSelector=function jokesSelector(state){return state.joke;};// Reducer\nexport default jokesSlice.reducer;// Asynchronous thunk action\nexport var getRandomJoke=function getRandomJoke(fetchJoke,params){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setJokesLoading());_context.prev=1;_context.next=4;return fetchJoke(params);case 4:data=_context.sent;dispatch(setJokesSuccess(data));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch(setJokesError());case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/Пользователь/Desktop/norris/src/redux/joke.js"],"names":["createSlice","initialState","loading","error","joke","jokesSlice","name","reducers","setJokesLoading","state","setJokesSuccess","payload","hasErrors","setJokesError","actions","jokesSelector","reducer","getRandomJoke","fetchJoke","params","dispatch","data"],"mappings":"wXAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CACxBC,OAAO,CAAE,KADe,CAExBC,KAAK,CAAE,KAFiB,CAGxBC,IAAI,CAAE,IAHkB,CAArB,CAMP,GAAMC,CAAAA,UAAU,CAAGL,WAAW,CAAC,CAC3BM,IAAI,CAAE,OADqB,CAE3BL,YAAY,CAAZA,YAF2B,CAG3BM,QAAQ,CAAE,CACNC,eAAe,CAAE,yBAACC,KAAD,CAAW,CACxBA,KAAK,CAACP,OAAN,CAAgB,IAAhB,CACH,CAHK,CAINQ,eAAe,CAAE,yBAACD,KAAD,MAAwB,IAAdE,CAAAA,OAAc,MAAdA,OAAc,CACrCF,KAAK,CAACL,IAAN,CAAaO,OAAb,CACAF,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACG,SAAN,CAAkB,KAAlB,CACH,CARK,CASNC,aAAa,CAAE,uBAACJ,KAAD,CAAW,CACtBA,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACN,KAAN,CAAc,IAAd,CACH,CAZK,CAHiB,CAAD,CAA9B,CAmBA;AACO,wBAIHE,UAAU,CAACS,OAJR,CACHN,eADG,qBACHA,eADG,CAEHE,eAFG,qBAEHA,eAFG,CAGHG,aAHG,qBAGHA,aAHG,CAMP;sDACA,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACN,KAAD,QAAWA,CAAAA,KAAK,CAACL,IAAjB,EAAtB,CAEP;AACA,cAAeC,CAAAA,UAAU,CAACW,OAA1B,CAEA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,MAAZ,CAAuB,CAChD,gGAAO,iBAAOC,QAAP,2HACHA,QAAQ,CAACZ,eAAe,EAAhB,CAAR,CADG,sCAIoBU,CAAAA,SAAS,CAACC,MAAD,CAJ7B,QAIOE,IAJP,eAKCD,QAAQ,CAACV,eAAe,CAACW,IAAD,CAAhB,CAAR,CALD,+EAOCD,QAAQ,CAACP,aAAa,EAAd,CAAR,CAPD,oEAAP,gEAUH,CAXM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport const initialState = {\r\n    loading: false,\r\n    error: false,\r\n    joke: null,\r\n}\r\n\r\nconst jokesSlice = createSlice({\r\n    name: \"jokes\",\r\n    initialState,\r\n    reducers: {\r\n        setJokesLoading: (state) => {\r\n            state.loading = true\r\n        },\r\n        setJokesSuccess: (state, { payload }) => {\r\n            state.joke = payload\r\n            state.loading = false\r\n            state.hasErrors = false\r\n        },\r\n        setJokesError: (state) => {\r\n            state.loading = false\r\n            state.error = true\r\n        },\r\n    },\r\n})\r\n\r\n// Actions generated from the slice\r\nexport const {\r\n    setJokesLoading,\r\n    setJokesSuccess,\r\n    setJokesError,\r\n} = jokesSlice.actions\r\n\r\n// Selector\r\nexport const jokesSelector = (state) => state.joke\r\n\r\n// Reducer\r\nexport default jokesSlice.reducer\r\n\r\n// Asynchronous thunk action\r\nexport const getRandomJoke = (fetchJoke, params) => {\r\n    return async (dispatch) => {\r\n        dispatch(setJokesLoading())\r\n\r\n        try {\r\n            const data = await fetchJoke(params)\r\n            dispatch(setJokesSuccess(data))\r\n        } catch (error) {\r\n            dispatch(setJokesError())\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}