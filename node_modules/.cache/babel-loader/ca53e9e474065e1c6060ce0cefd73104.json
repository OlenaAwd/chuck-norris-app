{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  loading: false,\n  error: false,\n  categories: []\n};\nconst categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    setCategories: state => {\n      state.loading = true;\n    },\n    setCategoriesSuccess: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.categories = payload;\n      state.loading = false;\n      state.error = false;\n    },\n    setCategoriesError: state => {\n      state.loading = false;\n      state.error = true;\n    }\n  }\n}); // Actions generated from the slice\n\nexport const {\n  setCategories,\n  setCategoriesSuccess,\n  setCategoriesError\n} = categoriesSlice.actions; // Selector\n\nexport const categoriesSelector = state => state.categories; // Reducer\n\nexport default categoriesSlice.reducer; // Asynchronous thunk action\n\nexport function getCategories(fetchCategories) {\n  return async dispatch => {\n    dispatch(setCategories());\n\n    try {\n      const data = await fetchCategories();\n      dispatch(setCategoriesSuccess(data));\n    } catch (error) {\n      dispatch(setCategoriesError());\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Пользователь/Desktop/norris/src/redux/categories.js"],"names":["createSlice","initialState","loading","error","categories","categoriesSlice","name","reducers","setCategories","state","setCategoriesSuccess","payload","setCategoriesError","actions","categoriesSelector","reducer","getCategories","fetchCategories","dispatch","data"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,OAAO,EAAE,KADe;AAExBC,EAAAA,KAAK,EAAE,KAFiB;AAGxBC,EAAAA,UAAU,EAAE;AAHY,CAArB;AAMP,MAAMC,eAAe,GAAGL,WAAW,CAAC;AAChCM,EAAAA,IAAI,EAAE,YAD0B;AAEhCL,EAAAA,YAFgC;AAGhCM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,EAAGC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACH,KAHK;AAINQ,IAAAA,oBAAoB,EAAE,CAACD,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC1CF,MAAAA,KAAK,CAACL,UAAN,GAAmBO,OAAnB;AACAF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAc,KAAd;AACH,KARK;AASNS,IAAAA,kBAAkB,EAAGH,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACH;AAZK;AAHsB,CAAD,CAAnC,C,CAmBA;;AACA,OAAO,MAAM;AACTK,EAAAA,aADS;AAETE,EAAAA,oBAFS;AAGTE,EAAAA;AAHS,IAITP,eAAe,CAACQ,OAJb,C,CAMP;;AACA,OAAO,MAAMC,kBAAkB,GAAIL,KAAD,IAAWA,KAAK,CAACL,UAA5C,C,CAEP;;AACA,eAAeC,eAAe,CAACU,OAA/B,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAuBC,eAAvB,EAAwC;AAC3C,SAAO,MAAOC,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;;AAEA,QAAI;AACA,YAAMW,IAAI,GAAG,MAAMF,eAAe,EAAlC;AACAC,MAAAA,QAAQ,CAACR,oBAAoB,CAACS,IAAD,CAArB,CAAR;AACH,KAHD,CAGE,OAAOhB,KAAP,EAAc;AACZe,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACH;AACJ,GATD;AAUH","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const initialState = {\r\n    loading: false,\r\n    error: false,\r\n    categories: [],\r\n}\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: \"categories\",\r\n    initialState,\r\n    reducers: {\r\n        setCategories: (state) => {\r\n            state.loading = true\r\n        },\r\n        setCategoriesSuccess: (state, { payload }) => {\r\n            state.categories = payload\r\n            state.loading = false\r\n            state.error = false\r\n        },\r\n        setCategoriesError: (state) => {\r\n            state.loading = false\r\n            state.error = true\r\n        },\r\n    },\r\n})\r\n\r\n// Actions generated from the slice\r\nexport const {\r\n    setCategories,\r\n    setCategoriesSuccess,\r\n    setCategoriesError,\r\n} = categoriesSlice.actions\r\n\r\n// Selector\r\nexport const categoriesSelector = (state) => state.categories\r\n\r\n// Reducer\r\nexport default categoriesSlice.reducer\r\n\r\n// Asynchronous thunk action\r\nexport function getCategories(fetchCategories) {\r\n    return async (dispatch) => {\r\n        dispatch(setCategories())\r\n\r\n        try {\r\n            const data = await fetchCategories()\r\n            dispatch(setCategoriesSuccess(data))\r\n        } catch (error) {\r\n            dispatch(setCategoriesError())\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}