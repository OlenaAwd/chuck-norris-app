{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C/Desktop/norris/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useRef}from\"react\";import{makeStyles}from'@mui/styles';import{TextField}from\"@mui/material\";import{useDispatch,useSelector}from\"react-redux\";import{getRandomJoke}from\"../redux/joke\";import{setSearchText,searchTextSelector}from\"../redux/searchText\";import{setCategory,categorySelector}from\"../redux/category\";import{fetchQuerriedRandomJoke}from\"../API/NorrisAPI\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{\"& > *\":{margin:theme.spacing(2),width:theme.spacing(50),height:theme.spacing(6)}}};});var JokeForm=function JokeForm(){var classes=useStyles();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useSelector=useSelector(searchTextSelector),searchText=_useSelector.searchText,textTooShort=_useSelector.textTooShort;var _useSelector2=useSelector(categorySelector),category=_useSelector2.category;var handleOnChange=function handleOnChange(e){dispatch(setSearchText(e.target.value));if(e.target.value.length>0){dispatch(setCategory(null));}};var prevSearchTextRef=useRef();useEffect(function(){prevSearchTextRef.current=searchText;});var prevSearchText=prevSearchTextRef.current;var getSearch=function getSearch(){setLoading(true);if(searchText.length!==0&&prevSearchText.length!==0&&category!==null){dispatch(setSearchText(\"\"));}else if(!textTooShort&&searchText.length!==0){dispatch(getRandomJoke(fetchQuerriedRandomJoke,{searchText:searchText}));}setLoading(false);};useEffect(function(){getSearch();});return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(TextField,{sx:{input:{color:'#000',border:'1px solid #fff',borderRadius:'5px',background:'#fefefe',height:'15px'}},value:searchText,error:textTooShort,helperText:textTooShort?\"Phrase is too short.\":\"\",id:\"standard-basic\",onChange:handleOnChange,label:\"Search by phrase\"})});};export default JokeForm;","map":{"version":3,"sources":["C:/Users/Пользователь/Desktop/norris/src/components/JokeForm.jsx"],"names":["React","useEffect","useState","useRef","makeStyles","TextField","useDispatch","useSelector","getRandomJoke","setSearchText","searchTextSelector","setCategory","categorySelector","fetchQuerriedRandomJoke","useStyles","theme","root","margin","spacing","width","height","JokeForm","classes","dispatch","loading","setLoading","searchText","textTooShort","category","handleOnChange","e","target","value","length","prevSearchTextRef","current","prevSearchText","getSearch","input","color","border","borderRadius","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { TextField } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRandomJoke } from \"../redux/joke\";\r\nimport { setSearchText, searchTextSelector } from \"../redux/searchText\";\r\nimport { setCategory, categorySelector } from \"../redux/category\";\r\nimport { fetchQuerriedRandomJoke } from \"../API/NorrisAPI\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(2),\r\n            width: theme.spacing(50),\r\n            height: theme.spacing(6),\r\n        },\r\n    },\r\n}))\r\n\r\nconst JokeForm = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const { searchText, textTooShort } = useSelector(searchTextSelector)\r\n    const { category } = useSelector(categorySelector)\r\n\r\n    const handleOnChange = (e) => {\r\n        dispatch(setSearchText(e.target.value))\r\n        if (e.target.value.length > 0) {\r\n            dispatch(setCategory(null))\r\n        }\r\n    }\r\n\r\n    const prevSearchTextRef = useRef()\r\n    useEffect(() => {\r\n        prevSearchTextRef.current = searchText\r\n    })\r\n    const prevSearchText = prevSearchTextRef.current\r\n\r\n    const getSearch = () => {\r\n        setLoading(true);\r\n        if (\r\n            searchText.length !== 0 &&\r\n            prevSearchText.length !== 0 &&\r\n            category !== null\r\n        ) {\r\n            dispatch(setSearchText(\"\"))\r\n        } else if (!textTooShort && searchText.length !== 0) {\r\n            dispatch(\r\n                getRandomJoke(fetchQuerriedRandomJoke, { searchText: searchText })\r\n            )\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSearch();\r\n    })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                sx={{ input: { color: '#000', border: '1px solid #fff', borderRadius: '5px', background: '#fefefe', height: '15px' } }}\r\n                value={searchText}\r\n                error={textTooShort}\r\n                helperText={textTooShort ? \"Phrase is too short.\" : \"\"}\r\n                id=\"standard-basic\"\r\n                onChange={handleOnChange}\r\n                label=\"Search by phrase\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeForm;"]},"metadata":{},"sourceType":"module"}