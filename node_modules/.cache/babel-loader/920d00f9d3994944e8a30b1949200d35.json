{"ast":null,"code":"import{React,useEffect}from\"react\";import{makeStyles}from'@mui/styles';import{Chip,CircularProgress,Typography}from\"@mui/material\";import{useDispatch,useSelector}from\"react-redux\";import{getRandomJoke}from\"../redux/joke\";import{getCategories,categoriesSelector}from\"../redux/categories\";import{setCategory,categorySelector}from\"../redux/category\";import{fetchRandomJoke,fetchJokeFromCategory,fetchCategories}from\"../API/NorrisAPI.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{paddingTop:'55px',display:\"flex\",justifyContent:\"safe center\",flexWrap:\"wrap\",\"& > *\":{margin:theme.spacing(0.8)},listStyle:\"none\"},chip:{margin:theme.spacing(0.4),marginTop:'40px',marginBottom:'30px'}};});var JokeCategories=function JokeCategories(){var classes=useStyles();var dispatch=useDispatch();var _useSelector=useSelector(categoriesSelector),categories=_useSelector.categories,loading=_useSelector.loading,error=_useSelector.error;var _useSelector2=useSelector(categorySelector),category=_useSelector2.category;useEffect(function(){dispatch(getCategories(fetchCategories));},[dispatch]);var handleClick=function handleClick(e){if(category===e.target.textContent){dispatch(setCategory(null));dispatch(getRandomJoke(fetchRandomJoke));}else{dispatch(setCategory(e.target.textContent));dispatch(getRandomJoke(fetchJokeFromCategory,{category:e.target.textContent}));}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[loading&&/*#__PURE__*/_jsx(CircularProgress,{}),!loading&&!error&&categories.map(function(data){return/*#__PURE__*/_jsx(Chip,{label:data,onClick:handleClick,color:data===category?\"primary\":\"secondary\",className:classes.chip},data);}),error&&/*#__PURE__*/_jsx(Typography,{variant:\"body1\",align:\"left\",children:\"No categories found.\"})]});};export default JokeCategories;","map":{"version":3,"sources":["C:/Users/Пользователь/Desktop/norris/src/components/JokeCategories.jsx"],"names":["React","useEffect","makeStyles","Chip","CircularProgress","Typography","useDispatch","useSelector","getRandomJoke","getCategories","categoriesSelector","setCategory","categorySelector","fetchRandomJoke","fetchJokeFromCategory","fetchCategories","useStyles","theme","root","paddingTop","display","justifyContent","flexWrap","margin","spacing","listStyle","chip","marginTop","marginBottom","JokeCategories","classes","dispatch","categories","loading","error","category","handleClick","e","target","textContent","map","data"],"mappings":"AAAA,OAASA,KAAT,CAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,IAAT,CAAeC,gBAAf,CAAiCC,UAAjC,KAAmD,eAAnD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,qBAAlD,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,mBAA9C,CACA,OACIC,eADJ,CAEIC,qBAFJ,CAGIC,eAHJ,KAIO,qBAJP,C,wFAMA,GAAMC,CAAAA,SAAS,CAAGd,UAAU,CAAC,SAACe,KAAD,QAAY,CACrCC,IAAI,CAAE,CACFC,UAAU,CAAE,MADV,CAEFC,OAAO,CAAE,MAFP,CAGFC,cAAc,CAAE,aAHd,CAIFC,QAAQ,CAAE,MAJR,CAKF,QAAS,CACLC,MAAM,CAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CADH,CALP,CAQFC,SAAS,CAAE,MART,CAD+B,CAWrCC,IAAI,CAAE,CACFH,MAAM,CAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CADN,CAEFG,SAAS,CAAE,MAFT,CAGFC,YAAY,CAAE,MAHZ,CAX+B,CAAZ,EAAD,CAA5B,CAkBA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAMC,CAAAA,OAAO,CAAGd,SAAS,EAAzB,CACA,GAAMe,CAAAA,QAAQ,CAAGzB,WAAW,EAA5B,CACA,iBAAuCC,WAAW,CAACG,kBAAD,CAAlD,CAAQsB,UAAR,cAAQA,UAAR,CAAoBC,OAApB,cAAoBA,OAApB,CAA6BC,KAA7B,cAA6BA,KAA7B,CACA,kBAAqB3B,WAAW,CAACK,gBAAD,CAAhC,CAAQuB,QAAR,eAAQA,QAAR,CAGAlC,SAAS,CAAC,UAAM,CACZ8B,QAAQ,CAACtB,aAAa,CAACM,eAAD,CAAd,CAAR,CACH,CAFQ,CAEN,CAACgB,QAAD,CAFM,CAAT,CAIA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACvB,GAAIF,QAAQ,GAAKE,CAAC,CAACC,MAAF,CAASC,WAA1B,CAAuC,CACnCR,QAAQ,CAACpB,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAoB,QAAQ,CAACvB,aAAa,CAACK,eAAD,CAAd,CAAR,CACH,CAHD,IAGO,CACHkB,QAAQ,CAACpB,WAAW,CAAC0B,CAAC,CAACC,MAAF,CAASC,WAAV,CAAZ,CAAR,CACAR,QAAQ,CAACvB,aAAa,CAACM,qBAAD,CAAwB,CAAEqB,QAAQ,CAAEE,CAAC,CAACC,MAAF,CAASC,WAArB,CAAxB,CAAd,CAAR,CACH,CACJ,CARD,CAUA,mBACI,aAAK,SAAS,CAAET,OAAO,CAACZ,IAAxB,WACKe,OAAO,eAAI,KAAC,gBAAD,IADhB,CAEK,CAACA,OAAD,EACG,CAACC,KADJ,EAEGF,UAAU,CAACQ,GAAX,CAAe,SAACC,IAAD,CAAU,CACrB,mBACI,KAAC,IAAD,EAEI,KAAK,CAAEA,IAFX,CAGI,OAAO,CAAEL,WAHb,CAII,KAAK,CAAEK,IAAI,GAAKN,QAAT,CAAoB,SAApB,CAAgC,WAJ3C,CAKI,SAAS,CAAEL,OAAO,CAACJ,IALvB,EACSe,IADT,CADJ,CASH,CAVD,CAJR,CAeKP,KAAK,eACF,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,MAAlC,kCAhBR,GADJ,CAuBH,CA5CD,CA8CA,cAAeL,CAAAA,cAAf","sourcesContent":["import { React, useEffect } from \"react\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Chip, CircularProgress, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRandomJoke } from \"../redux/joke\";\r\nimport { getCategories, categoriesSelector } from \"../redux/categories\";\r\nimport { setCategory, categorySelector } from \"../redux/category\";\r\nimport {\r\n    fetchRandomJoke,\r\n    fetchJokeFromCategory,\r\n    fetchCategories\r\n} from \"../API/NorrisAPI.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: '55px',\r\n        display: \"flex\",\r\n        justifyContent: \"safe center\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.8),\r\n        },\r\n        listStyle: \"none\",\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.4),\r\n        marginTop: '40px',\r\n        marginBottom: '30px',\r\n    },\r\n}));\r\n\r\nconst JokeCategories = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { categories, loading, error } = useSelector(categoriesSelector);\r\n    const { category } = useSelector(categorySelector);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories(fetchCategories));\r\n    }, [dispatch])\r\n\r\n    const handleClick = (e) => {\r\n        if (category === e.target.textContent) {\r\n            dispatch(setCategory(null))\r\n            dispatch(getRandomJoke(fetchRandomJoke))\r\n        } else {\r\n            dispatch(setCategory(e.target.textContent))\r\n            dispatch(getRandomJoke(fetchJokeFromCategory, { category: e.target.textContent }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading && <CircularProgress />}\r\n            {!loading &&\r\n                !error &&\r\n                categories.map((data) => {\r\n                    return (\r\n                        <Chip\r\n                            key={data}\r\n                            label={data}\r\n                            onClick={handleClick}\r\n                            color={data === category ? \"primary\" : \"secondary\"}\r\n                            className={classes.chip}\r\n                        />\r\n                    )\r\n                })}\r\n            {error && (\r\n                <Typography variant=\"body1\" align=\"left\">\r\n                    No categories found.\r\n                </Typography>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeCategories\r\n"]},"metadata":{},"sourceType":"module"}